version: '3.8'
services:
  # mysql server
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_DOCKER_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
  # redis cache
  redis:
    image: redis:6.2-alpine
    restart: always
    env_file:
      - ./.env
    ports:
      - $REDIS_DOCKER_PORT:$REDIS_DOCKER_PORT
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
  # express api service
  app:
    depends_on:
      - mysqldb
      - redis
    build: ./api
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_DOCKER_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=mysqldb # let docker to resolve the host by service
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
      - RD_PORT=$REDIS_DOCKER_PORT
      - RD_HOST=redis # let docker to resolve the host by service
      - APP_PORT=$NODE_DOCKER_PORT
    volumes:
      - ./api:/api
    stdin_open: true
    tty: true
  worker:
    depends_on:
      - mysqldb
      - redis
      - app
    build: ./worker
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $WORKER_PORT:$WORKER_PORT
    environment:
      - DB_HOST=mysqldb # let docker to resolve the host by service
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
      - RD_PORT=$REDIS_DOCKER_PORT
      - RD_HOST=redis # let docker to resolve the host by service
      - APP_PORT=$WORKER_PORT
    volumes:
      - ./worker:/worker
    stdin_open: true
    tty: true
volumes: 
  db:
  cache:
    driver: local
